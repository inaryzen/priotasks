package components

import (
	"fmt"
	"strings"
	"github.com/inaryzen/priotasks/models"
)

// ai: Helper function to join tags for tooltip display
func joinTags(tags []models.TaskTag) string {
	var tagStrings []string
	for _, tag := range tags {
		tagStrings = append(tagStrings, string(tag))
	}
	return strings.Join(tagStrings, ", ")
}

templ TaskTable(cards []models.Task, st models.Settings) {
	<table id="cards-table">
		<colgroup>
			<col style="width: 60px;"/>
			<col style="width: 150px;"/> // Tags
			<col style="width: 500px;"/>
			<col style="width: 60px;"/>
			<col style="width: 100px;"/>
			<col style="width: 120px;"/> // Impact
			<col style="width: 60px;"/> // WIP
			<col style="width: 60px;"/> // Planned
			<col style="width: 120px;"/> // Value
			<col style="width: 120px;"/> // Fun
			<col style="width: 200px;"/>
			<col style="width: 200px;"/>
			<col style="width: 200px;"/>
			<col style="width: auto;"/>
		</colgroup>
		<thead>
			<tr>
				<th>Done</th>
				<th>Tags</th>
				<th>Title</th>
				@SortableHeader(st, models.ColumnCost)
				@SortableHeader(st, models.Priority)
				@SortableHeader(st, models.ColumnImpact)
				@SortableHeader(st, models.ColumnWip)
				@SortableHeader(st, models.ColumnPlanned)
				@SortableHeader(st, models.ColumnValue)
				@SortableHeader(st, models.ColumnFun)
				@SortableHeader(st, models.Completed)
				@SortableHeader(st, models.Created)
				<th>Updated</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			for _, c := range cards {
				<tr>
					<td id="column-completed-status">
						<input
							if c.IsCompleted() {
								checked
							}
							name="card-completed"
							type="checkbox"
							disabled
						/>
					</td>
					<td id="column-tags" class="column-tags" title={ joinTags(c.Tags) }>
						<div class="tags-display">
							for i, tag := range c.Tags {
								if i > 0 {
									<span class="tag-separator" />
								}
								<span class="tag-pill">{ string(tag) }</span>
							}
						</div>
					</td>
					<td id="column-title" class="column-title"><a href="#" hx-get={ string(templ.URL(fmt.Sprintf("/view/task/%s", c.Id))) } hx-target="#modal-card" hx-swap="outerHTML">{ c.Title }</a></td>
					<td id="column-impact">{ c.Cost.ToHumanString() }</td>
					<td id="column-priority">{ c.Priority.ToStr() }</td>
					<td id="column-impact">{ c.Impact.ToHumanString() }</td>
					<td id="column-wip" class="status-column">
						if c.Wip {
							<span title="Work in Progress">üèóÔ∏è</span>
						}
					</td>
					<td id="column-planned" class="status-column">
						if c.Planned {
							<span title="Planned">üìÖ</span>
						}
					</td>
					<td id="column-value">
						{ c.ValueAsHumanStr() }
					</td>
					<td id="column-fun">
						{ c.Fun.ToHumanString() }
					</td>
					<td id="column-completed">
						if c.IsCompleted() {
							{ c.Completed.Format("2006-01-02 15:04:05") }
						}
					</td>
					<td id="column-created">{ c.Created.Format("2006-01-02 15:04:05") }</td>
					<td id="column-updated">{ c.Updated.Format("2006-01-02 15:04:05") }</td>
						<td></td>
				</tr>
			}
		</tbody>
	</table>
}